@page "/projects"
@using Business.Projects.Queries.GetProjectList
@using Microsoft.AspNetCore.WebUtilities
@using Business.Common.Extensions
@using System.Security.Cryptography
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<a href="/project/create" class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary">Добавить проект</button>
    </div>
</a>
<form @onsubmit="FilterProjects">
    <div class="form-group">
        <label for="startDate">Дата начала:</label>
        <input type="date" id="startDate" @bind="startDate" />
    </div>
    <div class="form-group">
        <label for="endDate">Дата окончания:</label>
        <input type="date" id="endDate" @bind="endDate" />
    </div>
    <div class="form-group">
        <label for="priority">Приоритет:</label>
        <input type="number" id="priority" @bind="priority" />
    </div>
    <div class="form-group">
        <label for="sortBy">Сортировать по:</label>
        <select id="sortBy" @bind="sortBy">
            <option value="dateBeginning">Дата начала</option>
            <option value="dateEnd">Дата финиша</option>
            <option value="priority">Приоритет</option>
        </select>
    </div>
    <div class="form-group">
        <label for="sortOrder">Порядок сортировки:</label>
        <select id="sortOrder" @bind="sortOrder">
            <option value="asc">По возрастанию</option>
            <option value="desc">По убыванию</option>
        </select>
    </div>
    <button type="submit">Фильтровать</button>
</form>


<h3>Список проектов</h3>

@if (ProjectsList.Projects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-striped" style="width:100%">
        <thead>
        <tr>
            <th>Название проекта</th>
            <th>Дата начала проекта</th>
            <th>
                Дата финиша проекта
            </th>
            <th>Приоритет</th>
            <th>Кнопки управления</th>
        </tr>
        </thead>
    <tbody>
    @foreach (var project in ProjectsList.Projects)
    {
        <tr>
            <td>@project.Name</td>
            <td>@project.DateBeginning.ToShortDateString()</td>
            <td>@project.DateEnd.ToShortDateString()</td>
            <td>@project.Priority</td>
            <td>
                <button class="btn btn-warning" @onclick="() => EditProject(project.Id)">Редактировать</button>
                <button class="btn btn-danger" @onclick="async () => await DeleteProject(project.Id)">Удалить</button>
                <button class="btn btn-primary" @onclick="() => ManageProject(project.Id)">Управление проектом</button>
                <button class="btn btn-primary" @onclick="() => TasksProject(project.Id)">Задачи проекта</button>
            </td>
        </tr>
    }
    </tbody>
    </table>
}

@code {
    ProjectListVm ProjectsList = new();

    DateTime? startDate;
    DateTime? endDate;
    int? priority;
    string? sortBy;
    string? sortOrder;
    protected override async Task OnInitializedAsync()
    {
        await FilterProjects();
    }

    private async Task FilterProjects()
    {
        var queryString = new Dictionary<string, string>
        {
            { "startDate", startDate?.ToString("yyyy-MM-dd") },
            { "endDate", endDate?.ToString("yyyy-MM-dd") },
            { "priority", priority?.ToString() },
            { "sortBy", sortBy },
            { "sortOrder", sortOrder }
        }.Where(kvp => kvp.Value != null).ToQueryString();

        ProjectsList = await HttpClient.GetFromJsonAsync<ProjectListVm>($"project?{queryString}");
    }

    private void EditProject(int id)
    {
        NavigationManager.NavigateTo($"/project/edit/{id}");
    }

    private async Task DeleteProject(int id)
    {
        var response = await HttpClient.DeleteAsync($"project/{id}");
        if (response.IsSuccessStatusCode)
        {
            ProjectsList = await HttpClient.GetFromJsonAsync<ProjectListVm>("project");
            StateHasChanged();
        }
    }

    private void ManageProject(int id)
    {
        NavigationManager.NavigateTo($"project/manage/{id}");
    }

    private void TasksProject(int id)
    {
        NavigationManager.NavigateTo($"project/tasks/{id}");
    }
}