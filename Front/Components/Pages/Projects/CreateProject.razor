@page "/project/create"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using Front.Models.Project
@using System.Net
@using Business.Employees.Queries.GetEmployeeList
<h3>Создание проекта</h3>

<EditForm Model="command" OnValidSubmit="SubmitForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="name">Название проекта</label>
        <InputText id="name" @bind-Value="command.Name" class="form-control" />
    </div>
    <div class="form-group">
        <label for="nameCustomer">Компания-заказчик</label>
        <InputText id="nameCustomer" @bind-Value="command.NameCustomer" class="form-control" />
    </div>
    <div class="form-group">
        <label for="nameContractor">Компания-исполнитель</label>
        <InputText id="nameContractor" @bind-Value="command.NameContractor" class="form-control" />
    </div>
    <div class="form-group">
        <label for="managerId">Менеджер проекта</label>
        <InputSelect id="managerId" @bind-Value="command.ProjectManagerId">
            <option value="">Выберите менеджера</option>
            @if (EmployeeList.Employees != null)
                @foreach (var employee in EmployeeList.Employees)
                {
                    <option value="@employee.Id">@employee.Name @employee.SecondName</option>
                }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="priority">Приоритет</label>
        <InputNumber id="priority" @bind-Value="command.Priority" />
    </div>
    <div class="form-group">
        <label for="dateBeginning">Приоритет</label>
        <InputDate id="dateBeginning" @bind-Value="command.DateBeginning" />
    </div>
    <div class="form-group">
        <label for="dateEnd">Приоритет</label>
        <InputDate id="dateEnd" @bind-Value="command.DateEnd" />
    </div>
    <button type="submit" class="btn btn-primary">Сохранить</button>
    <a href="/projects" class="mb-4">
        <div class="col-sm-6">
            <button type="button" class="btn btn-primary">Назад</button>
        </div>
    </a>
</EditForm>
@errorMessage
@code {
    CreateProjectDto command { get; set; }
    string errorMessage { get; set; }
    EmployeeListVm EmployeeList { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        command = new CreateProjectDto();
        EmployeeList = await HttpClient.GetFromJsonAsync<EmployeeListVm>("employee");
    }
    private async Task SubmitForm()
    {
        var result = await HttpClient.PostAsJsonAsync("Project", command);
        if (result.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/projects");
        }
        else
        {
            errorMessage = result.ReasonPhrase;
        }
    }
}
